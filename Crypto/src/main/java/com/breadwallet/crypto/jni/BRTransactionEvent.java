package com.breadwallet.crypto.jni;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bitcoin/BRWalletManager.h:38</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class BRTransactionEvent extends Structure {
	/**
	 * @see BRTransactionEventType<br>
	 * C type : BRTransactionEventType
	 */
	public int type;
	/** C type : u_union */
	public u_union u;
	/** <i>native declaration : bitcoin/BRWalletManager.h:37</i> */
	public static class u_union extends Union {
		/** C type : updated_struct */
		public updated_struct updated;
		/** <i>native declaration : bitcoin/BRWalletManager.h:36</i> */
		public static class updated_struct extends Structure {
			public int blockHeight;
			public int timestamp;
			public updated_struct() {
				super();
			}
			protected List<String> getFieldOrder() {
				return Arrays.asList("blockHeight", "timestamp");
			}
			public updated_struct(int blockHeight, int timestamp) {
				super();
				this.blockHeight = blockHeight;
				this.timestamp = timestamp;
			}
			public updated_struct(Pointer peer) {
				super(peer);
			}
			public static class ByReference extends updated_struct implements Structure.ByReference {
				
			};
			public static class ByValue extends updated_struct implements Structure.ByValue {
				
			};
		};
		public u_union() {
			super();
		}
		/** @param updated C type : updated_struct */
		public u_union(updated_struct updated) {
			super();
			this.updated = updated;
			setType(updated_struct.class);
		}
		public u_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends u_union implements Structure.ByReference {
			
		};
		public static class ByValue extends u_union implements Structure.ByValue {
			
		};
	};
	public BRTransactionEvent() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("type", "u");
	}
	/**
	 * @param type @see BRTransactionEventType<br>
	 * C type : BRTransactionEventType<br>
	 * @param u C type : u_union
	 */
	public BRTransactionEvent(int type, u_union u) {
		super();
		this.type = type;
		this.u = u;
	}
	public BRTransactionEvent(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends BRTransactionEvent implements Structure.ByReference {
		
	};
	public static class ByValue extends BRTransactionEvent implements Structure.ByValue {
		
	};
}
