package com.breadwallet.crypto.jni;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : bitcoin/BRTransaction.h:46</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class BRTransaction extends Structure {
	/** C type : UInt256 */
	public UInt256 txHash;
	/** C type : UInt256 */
	public UInt256 wtxHash;
	public int version;
	/** C type : BRTxInput* */
	public com.breadwallet.crypto.jni.BRTxInput.ByReference inputs;
	public SizeT inCount;
	/** C type : BRTxOutput* */
	public com.breadwallet.crypto.jni.BRTxOutput.ByReference outputs;
	public SizeT outCount;
	public int lockTime;
	public int blockHeight;
	/** time interval since unix epoch */
	public int timestamp;
	public BRTransaction() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("txHash", "wtxHash", "version", "inputs", "inCount", "outputs", "outCount", "lockTime", "blockHeight", "timestamp");
	}
	public BRTransaction(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends BRTransaction implements Structure.ByReference {
		
	};
	public static class ByValue extends BRTransaction implements Structure.ByValue {
		
	};
}
